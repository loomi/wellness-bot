name: CI/CD - Staging - Pipeline
on:
  push:
    branches: [develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  #continuous-integration:
  #  runs-on: ubuntu-latest
  #  steps:
  # Step 1
  #    - uses: actions/checkout@v2
  # Step 3
  #    - name: Build Application and Run CI Test
  #      run: docker-compose -f docker-compose.test.yml build && docker-compose -f docker-compose.test.yml up -d

  continuous-deployment:
    runs-on: ubuntu-latest
    #needs: [continuous-integration]
    if: github.ref == 'refs/heads/develop'
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_ECR_REGION }}

      - name: Docker authentication
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 820135014097.dkr.ecr.us-east-1.amazonaws.com

      - name: Get commmit hash
        id: get-hash
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"

      - name: Build application image
        run: docker build -t ${{ github.event.repository.name }}:staging-${{ steps.get-hash.outputs.hash }} .

      - name: Tag application image
        run: docker tag ${{ github.event.repository.name }}:staging-${{ steps.get-hash.outputs.hash }} 820135014097.dkr.ecr.us-east-1.amazonaws.com/${{ github.event.repository.name }}:staging-${{ steps.get-hash.outputs.hash }}

      - name: Push application image
        run: docker push 820135014097.dkr.ecr.us-east-1.amazonaws.com/${{ github.event.repository.name }}:staging-${{ steps.get-hash.outputs.hash }}

      - name: Push new images to k8s github repository
        env:
          API_GITHUB_TOKEN: ${{ secrets.API_GITHUB_TOKEN }}
        run: |
          git config --global user.name "isaquetdiniz"
          git config --global user.email "itd@cin.ufpe.br"
          git clone https://isaquetdiniz:$API_GITHUB_TOKEN@github.com/loomi/k8s.git
          cd k8s/${{ github.event.repository.name }}
          sed -i 's/${{ github.event.repository.name }}:staging-.\+/${{ github.event.repository.name }}:staging-${{ steps.get-hash.outputs.hash }}/g' deployment.yaml
          git add .
          git commit -m "feat: update ${{ github.event.repository.name }} staging to ${{ steps.get-hash.outputs.hash }}"
          git push origin main
